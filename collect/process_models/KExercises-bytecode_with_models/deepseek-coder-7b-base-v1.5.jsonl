{"kt_path": "7434/solution_7434.kt", "deepseek-coder-7b-base-v1.5": "fun test() {\n\n}### Task\nConvert the following JVM byte‑code into **Kotlin source**.\nOutput **Kotlin code ONLY**"}
{"kt_path": "7824/solution_7824.kt", "deepseek-coder-7b-base-v1.5": "fun testCountOddNumbers() {\n    // TODO\n}"}
{"kt_path": "2614/solution_2614.kt", "deepseek-coder-7b-base-v1.5": "fun investigateSituation() {\n\n}"}
{"kt_path": "4477/solution_4477.kt", "deepseek-coder-7b-base-v1.5": "fun getLeadIII(): Int = 0"}
{"kt_path": "4476/solution_4476.kt", "deepseek-coder-7b-base-v1.5": "fun getHeartRate(): Int {\n    return 0\n}"}
{"kt_path": "8909/solution_8909.kt", "deepseek-coder-7b-base-v1.5": "fun parentFunction(a: Int): Int {\n    return a\n}"}
{"kt_path": "4699/solution_4699.kt", "deepseek-coder-7b-base-v1.5": "fun getAge(age: Int) = age"}
{"kt_path": "6126/solution_6126.kt", "deepseek-coder-7b-base-v1.5": "fun checkBoolean(b: Boolean): Boolean = b"}
{"kt_path": "5226/solution_5226.kt", "deepseek-coder-7b-base-v1.5": "fun intersectPrecedence(): Boolean = TODO()"}
{"kt_path": "652/solution_652.kt", "deepseek-coder-7b-base-v1.5": "fun checkFloatDivision(a: Float, b: Float): Boolean = a / b == 1.0f"}
{"kt_path": "558/solution_558.kt", "deepseek-coder-7b-base-v1.5": "fun function1(a: Int, b: Int): Int = a and b"}
{"kt_path": "13973/solution_13973.kt", "deepseek-coder-7b-base-v1.5": "fun divide(a: Int, b: Int): Int = a / b"}
{"kt_path": "13972/solution_13972.kt", "deepseek-coder-7b-base-v1.5": "fun multiply(a: Int, b: Int): Int = a * b"}
{"kt_path": "13970/solution_13970.kt", "deepseek-coder-7b-base-v1.5": "fun increaseByOne(n: Int): Int {\n    return n + 1\n}"}
{"kt_path": "1606/solution_1606.kt", "deepseek-coder-7b-base-v1.5": "fun getSum(a: Int, b: Int): Int {\n    return a + b\n}"}
{"kt_path": "3900/solution_3900.kt", "deepseek-coder-7b-base-v1.5": "fun multiplyNumbers(a: Int, b: Int): Int = a * b"}
{"kt_path": "13864/solution_13864.kt", "deepseek-coder-7b-base-v1.5": "fun calculateScore(a: Int, b: Int): Int = a * b"}
{"kt_path": "7751/solution_7751.kt", "deepseek-coder-7b-base-v1.5": "fun getComplement(num: Int): Int {\n    return num and 1\n}"}
{"kt_path": "9566/solution_9566.kt", "deepseek-coder-7b-base-v1.5": "fun calculateVelocity(distance: Int, time: Int): Int = distance / time"}
{"kt_path": "4903/solution_4903.kt", "deepseek-coder-7b-base-v1.5": "fun calculateDayPublished(day: Int): Int {\n    return day + 1\n}"}
{"kt_path": "11380/solution_11380.kt", "deepseek-coder-7b-base-v1.5": "fun determineWallArea(width: Int, height: Int): Int {\n    return width * height\n}"}
{"kt_path": "1194/solution_1194.kt", "deepseek-coder-7b-base-v1.5": "fun whileSubtraction(a: Int, b: Int): Int {\n    var a = a\n    while (a > b) {\n        a"}
{"kt_path": "7844/solution_7844.kt", "deepseek-coder-7b-base-v1.5": "fun sum(a: Int, b: Int): Int = a + b### Task\nConvert the following JVM byte‑code into **Kotlin source**.\nOutput **Kotlin code ONLY**"}
{"kt_path": "599/solution_599.kt", "deepseek-coder-7b-base-v1.5": "fun calculateRoomArea(width: Double, height: Double): Double = width * height"}
{"kt_path": "8402/solution_8402.kt", "deepseek-coder-7b-base-v1.5": "fun calculateNetIncome(income: Int, tax: Int): Int {\n    return income + tax\n}"}
{"kt_path": "11629/solution_11629.kt", "deepseek-coder-7b-base-v1.5": "fun calculateSlope(x1: Double, y1: Double): Double {\n    return x1 * y1\n}"}
{"kt_path": "2587/solution_2587.kt", "deepseek-coder-7b-base-v1.5": "fun calculateRoomArea(width: Double, height: Double): Double {\n    return width * height\n}"}
{"kt_path": "5733/solution_5733.kt", "deepseek-coder-7b-base-v1.5": "fun calculateBuildingArea(width: Int, height: Int): Int {\n    return width * height\n}"}
{"kt_path": "12144/solution_12144.kt", "deepseek-coder-7b-base-v1.5": "fun calculateProfits(initialInvestment: Double, currentValue: Double): Double {\n    return initialInvestment * currentValue\n}"}
{"kt_path": "9763/solution_9763.kt", "deepseek-coder-7b-base-v1.5": "fun calculateFinalPrice(price: Double, discount: Double): Double {\n    return price * discount\n}"}
{"kt_path": "11762/solution_11762.kt", "deepseek-coder-7b-base-v1.5": "fun calculateRoomArea(width: Double, height: Double): Double {\n    return width * height\n}"}
{"kt_path": "9178/solution_9178.kt", "deepseek-coder-7b-base-v1.5": "fun calculateGravityForce(mass: Double, distance: Double): Double {\n    return mass * distance\n}"}
{"kt_path": "8545/solution_8545.kt", "deepseek-coder-7b-base-v1.5": "fun calculateConversionRate(a: Int, b: Int): Double = 0.0"}
{"kt_path": "13968/solution_13968.kt", "deepseek-coder-7b-base-v1.5": "fun athletePerformanceDistance(distance: Double, time: Double): Double = distance / time"}
{"kt_path": "7841/solution_7841.kt", "deepseek-coder-7b-base-v1.5": "fun assignAnd(a: Int, b: Int): Int {\n    return a and b\n}"}
{"kt_path": "2909/solution_2909.kt", "deepseek-coder-7b-base-v1.5": "fun addNumbers(a: Int, b: Int): Int {\n    return a + b\n}"}
{"kt_path": "302/solution_302.kt", "deepseek-coder-7b-base-v1.5": "fun calculateXor(a: Int, b: Int): Int = a xor b"}
{"kt_path": "12753/solution_12753.kt", "deepseek-coder-7b-base-v1.5": "fun getSum(a: Int, b: Int): Int = a + b"}
{"kt_path": "5694/solution_5694.kt", "deepseek-coder-7b-base-v1.5": "fun calculateAge(yearOfBirth: Int, currentYear: Int): Int {\n    return currentYear - yearOfBirth\n}"}
{"kt_path": "7772/solution_7772.kt", "deepseek-coder-7b-base-v1.5": "fun increaseSpeed(speed: Int, increase: Int): Int = speed + increase"}
{"kt_path": "13321/solution_13321.kt", "deepseek-coder-7b-base-v1.5": "fun xorOperation(n: Int, start: Int): Int {\n    var xor = start\n    for (i in 1 until n) {\n        xor = xor xor (start + 2 * i)"}
{"kt_path": "3882/solution_3882.kt", "deepseek-coder-7b-base-v1.5": ""}
{"kt_path": "7919/solution_7919.kt", "deepseek-coder-7b-base-v1.5": "fun addAndOperation(a: Int, b: Int): Int {\n    return a and b\n}"}
{"kt_path": "640/solution_640.kt", "deepseek-coder-7b-base-v1.5": "fun multiplyAndAssign(a: Int, b: Int): Int {\n    return a * b\n}"}
{"kt_path": "797/solution_797.kt", "deepseek-coder-7b-base-v1.5": ""}
{"kt_path": "3049/solution_3049.kt", "deepseek-coder-7b-base-v1.5": "fun calculateVolume(length: Int, width: Int, height: Int): Int {\n    return length * width * height\n}"}
{"kt_path": "6128/solution_6128.kt", "deepseek-coder-7b-base-v1.5": ""}
{"kt_path": "5969/solution_5969.kt", "deepseek-coder-7b-base-v1.5": "fun getPositiveIndex(index: Int, size: Int): Int = index - size"}
{"kt_path": "1224/solution_1224.kt", "deepseek-coder-7b-base-v1.5": "fun multiplyIntegers(a: Int, b: Int): Int {\n    return a * b\n}"}
{"kt_path": "1810/solution_1810.kt", "deepseek-coder-7b-base-v1.5": "fun calculateLandArea(width: Int, length: Int): Int {\n    return width * length\n}"}
{"kt_path": "1562/solution_1562.kt", "deepseek-coder-7b-base-v1.5": "fun calculateTax(income: Int, taxRate: Int): Int {\n    return income * taxRate\n}"}
{"kt_path": "2870/solution_2870.kt", "deepseek-coder-7b-base-v1.5": "fun calculateFine(a: Int, b: Int): Int {\n    return (a - b) * 5\n}"}
{"kt_path": "6759/solution_6759.kt", "deepseek-coder-7b-base-v1.5": "fun averageSpeed(distance: Float, time: Float): Float {\n    return distance / time\n}"}
{"kt_path": "2736/solution_2736.kt", "deepseek-coder-7b-base-v1.5": "fun calculatePatientAge(birthYear: Int, currentYear: Int): Int {\n    return currentYear - birthYear\n}"}
{"kt_path": "4004/solution_4004.kt", "deepseek-coder-7b-base-v1.5": "fun calculatePatientAge(birthYear: Int, currentYear: Int): Int {\n    return currentYear - birthYear\n}"}
{"kt_path": "12220/solution_12220.kt", "deepseek-coder-7b-base-v1.5": "fun updateOrOperator(a: Int, b: Int): Int {\n    val result = a or b\n    return result\n}"}
{"kt_path": "14509/solution_14509.kt", "deepseek-coder-7b-base-v1.5": "fun calculateRoomArea(width: Int, height: Int): Int {\n    return width * height\n}"}
{"kt_path": "13481/solution_13481.kt", "deepseek-coder-7b-base-v1.5": "fun calculateShutterSpeed(aperture: Double, focalLength: Int, speed: Double): Double {\n    return 0.0\n}"}
{"kt_path": "10181/solution_10181.kt", "deepseek-coder-7b-base-v1.5": "fun calculateTax(salary: Int, taxRate: Int): Int {\n    return salary * taxRate\n}"}
{"kt_path": "3783/solution_3783.kt", "deepseek-coder-7b-base-v1.5": "fun calculateVoltageDrop(resistance: Int, current: Int): Int {\n    return resistance * current\n}"}
{"kt_path": "7670/solution_7670.kt", "deepseek-coder-7b-base-v1.5": "fun identityAssignment(): Boolean {\n    var a = 5\n    val b = a\n    return b == 1\n}"}
{"kt_path": "13453/solution_13453.kt", "deepseek-coder-7b-base-v1.5": "fun calculateTax(salary: Int, taxRate: Int): Int {\n    return salary * taxRate\n}"}
{"kt_path": "6574/solution_6574.kt", "deepseek-coder-7b-base-v1.5": "fun getMax(a: Int, b: Int): Int {\n    return if (a > b) a else b\n}"}
{"kt_path": "985/solution_985.kt", "deepseek-coder-7b-base-v1.5": "fun multiplyAssignAndRepeat(a: Int, b: Int): Int {\n    var result = a * b\n    return result\n}"}
{"kt_path": "3069/solution_3069.kt", "deepseek-coder-7b-base-v1.5": "fun calculateStress(a: Int, b: Int): Int {\n    return a + b\n}"}
{"kt_path": "9567/solution_9567.kt", "deepseek-coder-7b-base-v1.5": "fun calculateAcceleration(v0: Int, v1: Int, t: Int): Int {\n    return (v1 - v0) / t\n}"}
{"kt_path": "9762/solution_9762.kt", "deepseek-coder-7b-base-v1.5": "fun calculateDiscount(price: Double): Double {\n    return price * 0.2\n}"}
{"kt_path": "12787/solution_12787.kt", "deepseek-coder-7b-base-v1.5": "fun calculatePower(a: Int, b: Int): Int {\n    return a + b\n}"}
{"kt_path": "14674/solution_14674.kt", "deepseek-coder-7b-base-v1.5": "fun calculateTaxes(salary: Int, taxRate: Int): Int {\n    return salary * taxRate\n}"}
{"kt_path": "144/solution_144.kt", "deepseek-coder-7b-base-v1.5": "fun calculateNetIncome(grossIncome: Float, taxRate: Float): Float {\n    return grossIncome - (grossIncome * taxRate)\n}"}
{"kt_path": "224/solution_224.kt", "deepseek-coder-7b-base-v1.5": "fun getAge(age: Int): Int = if (age >= 18) 1 else 0"}
{"kt_path": "12602/solution_12602.kt", "deepseek-coder-7b-base-v1.5": "fun calculateTotalIncome(income: Int, tax: Int): Int {\n    return income + tax\n}"}
{"kt_path": "2061/solution_2061.kt", "deepseek-coder-7b-base-v1.5": "fun calculateFurnitureArea(width: Int, height: Int): Int {\n    return width * height\n}"}
{"kt_path": "1884/solution_1884.kt", "deepseek-coder-7b-base-v1.5": "fun calculateSquarePerimeter(side: Int): Int {\n    return side * 2\n}"}
{"kt_path": "5140/solution_5140.kt", "deepseek-coder-7b-base-v1.5": "fun calculateNetIncome(grossIncome: Float, taxRate: Float): Float {\n    return grossIncome - (grossIncome * taxRate)\n}"}
{"kt_path": "1945/solution_1945.kt", "deepseek-coder-7b-base-v1.5": "fun subtractTaxidermyAnimals(\n    animals: Int,\n    taxidermyAnimals: Int\n): Int {\n    return animals - taxidermyAnimals\n}"}
{"kt_path": "2025/solution_2025.kt", "deepseek-coder-7b-base-v1.5": "fun calculateAnimalPopulation(initialPopulation: Int, years: Int): Int {\n    return initialPopulation + years\n}"}
{"kt_path": "14511/solution_14511.kt", "deepseek-coder-7b-base-v1.5": "fun calculateNumberOfLights(width: Int, height: Int): Int {\n    return width / height\n}"}
{"kt_path": "13493/solution_13493.kt", "deepseek-coder-7b-base-v1.5": "fun calculateDistance(x: Int, y: Int): Int {\n    return x + y\n}"}
{"kt_path": "4381/solution_4381.kt", "deepseek-coder-7b-base-v1.5": "fun calculateAverageSpeed(distance: Int, time: Int): Int {\n    return (distance + time) / (distance + time).toFloat()\n}"}
{"kt_path": "9587/solution_9587.kt", "deepseek-coder-7b-base-v1.5": "fun bOr(a: Boolean, b: Boolean) = a || b"}
{"kt_path": "6576/solution_6576.kt", "deepseek-coder-7b-base-v1.5": "fun calculateDividendRatio(dividend: Int, divisor: Int): Int {\n    return dividend / divisor\n}"}
{"kt_path": "11550/solution_11550.kt", "deepseek-coder-7b-base-v1.5": "fun calculateAverageSpeed(distance: Int, time: Int): Int = (distance + time) / 2"}
{"kt_path": "7386/solution_7386.kt", "deepseek-coder-7b-base-v1.5": "fun intersectionAdditionOperator(a: Int): Int {\n    var a = a\n    a += 12\n    return a\n}"}
{"kt_path": "12691/solution_12691.kt", "deepseek-coder-7b-base-v1.5": "fun calculateTotalCost(price: Int, quantity: Int): Int {\n    return price * quantity\n}"}
{"kt_path": "8209/solution_8209.kt", "deepseek-coder-7b-base-v1.5": "fun calculateRequiredMaterials(\n    totalArea: Int,\n    areaPerBag: Int\n): Int {\n    return totalArea + areaPerBag\n}"}
{"kt_path": "2049/solution_2049.kt", "deepseek-coder-7b-base-v1.5": "fun calculatePrice(price: Int, discount: Int, tax: Int): Int = price * discount * tax"}
{"kt_path": "586/solution_586.kt", "deepseek-coder-7b-base-v1.5": "fun calculateArea(a: Double, b: Double): Double {\n    return a * b\n}"}
{"kt_path": "5139/solution_5139.kt", "deepseek-coder-7b-base-v1.5": "fun calculateTax(salary: Int, taxRate: Int): Int {\n    return salary * taxRate\n}"}
{"kt_path": "7904/solution_7904.kt", "deepseek-coder-7b-base-v1.5": "fun checkCurrent(a: Int, b: Int): Int = a + b"}
{"kt_path": "9335/solution_9335.kt", "deepseek-coder-7b-base-v1.5": "fun calculateTax(income: Double, taxRate: Double): Double = income * taxRate"}
{"kt_path": "2329/solution_2329.kt", "deepseek-coder-7b-base-v1.5": "fun isEven(number: Int): Boolean {\n    return number % 2 == 0\n}"}
{"kt_path": "6572/solution_6572.kt", "deepseek-coder-7b-base-v1.5": "fun calculateTotalPrice(quantity: Int, pricePerItem: Int): Int {\n    val totalPrice = quantity * pricePerItem\n    return totalPrice\n}"}
{"kt_path": "8071/solution_8071.kt", "deepseek-coder-7b-base-v1.5": "fun calculateArea(a: Double, b: Double): Double = a * b"}
{"kt_path": "11310/solution_11310.kt", "deepseek-coder-7b-base-v1.5": "fun calculateExpenses(days: Int, dailyRate: Float): Float {\n    return days * dailyRate\n}"}
{"kt_path": "10435/solution_10435.kt", "deepseek-coder-7b-base-v1.5": "fun calculateAge(age: Int): Int = age + 1"}
{"kt_path": "5594/solution_5594.kt", "deepseek-coder-7b-base-v1.5": "fun getSum(a: Int, b: Int): Int {\n    return a + b\n}"}
{"kt_path": "1356/solution_1356.kt", "deepseek-coder-7b-base-v1.5": "fun isNone(obj: Any?) = obj == null"}
{"kt_path": "8902/solution_8902.kt", "deepseek-coder-7b-base-v1.5": "fun calculatePower(x: Int, n: Int): Int {\n    return x * n\n}"}
{"kt_path": "6573/solution_6573.kt", "deepseek-coder-7b-base-v1.5": "fun calculateTotalPrice(price: Int, quantity: Int): Int {\n    return price * quantity\n}"}
