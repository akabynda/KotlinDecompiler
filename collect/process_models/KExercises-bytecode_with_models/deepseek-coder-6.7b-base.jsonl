{"kt_path": "7434/solution_7434.kt", "deepseek-coder-6.7b-base": "fun test() {\n    return\n}"}
{"kt_path": "7824/solution_7824.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "2614/solution_2614.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "4477/solution_4477.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "4476/solution_4476.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "8909/solution_8909.kt", "deepseek-coder-6.7b-base": "fun parentFunction(a: Int): Int = a"}
{"kt_path": "4699/solution_4699.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "6126/solution_6126.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "5226/solution_5226.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "652/solution_652.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "558/solution_558.kt", "deepseek-coder-6.7b-base": "fun function1(a: Int, b: Int): Int {\n    return a xor b\n}"}
{"kt_path": "13973/solution_13973.kt", "deepseek-coder-6.7b-base": "fun divide(a: Int, b: Int): Int {\n    return a / b\n}"}
{"kt_path": "13972/solution_13972.kt", "deepseek-coder-6.7b-base": "fun multiply(a: Int, b: Int): Int = a * b"}
{"kt_path": "13970/solution_13970.kt", "deepseek-coder-6.7b-base": "fun increaseByOne(x: Int): Int {\n    return x + 1\n}"}
{"kt_path": "1606/solution_1606.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "3900/solution_3900.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "13864/solution_13864.kt", "deepseek-coder-6.7b-base": "fun calculateScore(a: Int, b: Int): Int {\n    return a * b\n}"}
{"kt_path": "7751/solution_7751.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "9566/solution_9566.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "4903/solution_4903.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "11380/solution_11380.kt", "deepseek-coder-6.7b-base": "fun determineWallArea(width: Int, height: Int): Int {\n    return width * height\n}"}
{"kt_path": "1194/solution_1194.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "7844/solution_7844.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "599/solution_599.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "8402/solution_8402.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "11629/solution_11629.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "2587/solution_2587.kt", "deepseek-coder-6.7b-base": "fun calculateRoomArea(width: Double, height: Double): Double {\n    return width * height\n}"}
{"kt_path": "5733/solution_5733.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "12144/solution_12144.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "9763/solution_9763.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "11762/solution_11762.kt", "deepseek-coder-6.7b-base": "fun calculateRoomArea(length: Double, width: Double): Double {\n    return length * width\n}"}
{"kt_path": "9178/solution_9178.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "8545/solution_8545.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "13968/solution_13968.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "7841/solution_7841.kt", "deepseek-coder-6.7b-base": "fun assignXor(a: Int, b: Int): Int {\n    return a xor b\n}"}
{"kt_path": "2909/solution_2909.kt", "deepseek-coder-6.7b-base": "fun addNumbers(a: Int, b: Int): Int {\n    return a + b\n}"}
{"kt_path": "302/solution_302.kt", "deepseek-coder-6.7b-base": "fun calculateXor(a: Int, b: Int): Int {\n    return a xor b\n}"}
{"kt_path": "12753/solution_12753.kt", "deepseek-coder-6.7b-base": "fun trimLumber(height: Int, distance: Int): Int {\n    return height - distance\n}"}
{"kt_path": "5694/solution_5694.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "7772/solution_7772.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "13321/solution_13321.kt", "deepseek-coder-6.7b-base": "fun xorOperation(n: Int, start: Int): Int {\n    var result = start\n    for (i in 1 until n) {\n        result = result xor (start + 2 * i)\n    }\n    return result\n}"}
{"kt_path": "3882/solution_3882.kt", "deepseek-coder-6.7b-base": "fun calcTotalHours(hours: Int, minutes: Int): Int {\n    return hours * minutes\n}"}
{"kt_path": "7919/solution_7919.kt", "deepseek-coder-6.7b-base": "fun addOrOperation(a: Int, b: Int): Int {\n    return a + b\n}"}
{"kt_path": "640/solution_640.kt", "deepseek-coder-6.7b-base": "fun multiplyAndAssign(a: Int, b: Int): Int {\n    return a * b\n}"}
{"kt_path": "797/solution_797.kt", "deepseek-coder-6.7b-base": "fun calculateTax(income: Float, tax: Float): Float {\n    return income * tax\n}"}
{"kt_path": "3049/solution_3049.kt", "deepseek-coder-6.7b-base": "fun calculateVolume(a: Int, b: Int, c: Int): Int {\n    return a * b * c\n}"}
{"kt_path": "6128/solution_6128.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "5969/solution_5969.kt", "deepseek-coder-6.7b-base": "fun getNegativeIndex(index: Int, size: Int): Int {\n    return index - size\n}"}
{"kt_path": "1224/solution_1224.kt", "deepseek-coder-6.7b-base": "fun subtractIntegers(a: Int, b: Int): Int {\n    return a - b\n}"}
{"kt_path": "1810/solution_1810.kt", "deepseek-coder-6.7b-base": "fun calculateLandArea(width: Int, height: Int): Int {\n    return width * height\n}"}
{"kt_path": "1562/solution_1562.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "2870/solution_2870.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "6759/solution_6759.kt", "deepseek-coder-6.7b-base": "fun averageSpeed(distance: Float, time: Float): Float {\n    return distance / time\n}"}
{"kt_path": "2736/solution_2736.kt", "deepseek-coder-6.7b-base": "fun calculatePatientAge(yearOfBirth: Int, currentYear: Int): Int {\n    return currentYear - yearOfBirth\n}"}
{"kt_path": "4004/solution_4004.kt", "deepseek-coder-6.7b-base": "fun calculatePatientAge(yearOfBirth: Int, currentYear: Int): Int {\n    return currentYear - yearOfBirth\n}"}
{"kt_path": "12220/solution_12220.kt", "deepseek-coder-6.7b-base": "fun updateAndOperator(a: Int, b: Int): Int {\n    return a and b\n}"}
{"kt_path": "14509/solution_14509.kt", "deepseek-coder-6.7b-base": "fun calculateRoomArea(width: Int, height: Int): Int {\n    return width * height\n}"}
{"kt_path": "13481/solution_13481.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "10181/solution_10181.kt", "deepseek-coder-6.7b-base": "fun calculateTax(income: Float, tax: Float): Float {\n    return income * tax\n}"}
{"kt_path": "3783/solution_3783.kt", "deepseek-coder-6.7b-base": "fun calculateVoltageDrop(a: Int, b: Int): Int {\n    return a * b\n}"}
{"kt_path": "7670/solution_7670.kt", "deepseek-coder-6.7b-base": "fun identityAssignment(): Boolean {\n    var x = 5\n    var y = x\n    return true\n}"}
{"kt_path": "13453/solution_13453.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "6574/solution_6574.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "985/solution_985.kt", "deepseek-coder-6.7b-base": "fun multiplyAssignAndRepeat(a: Int, b: Int): Int {\n    var c = a * b\n    return c\n}"}
{"kt_path": "3069/solution_3069.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "9567/solution_9567.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "9762/solution_9762.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "12787/solution_12787.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "14674/solution_14674.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "144/solution_144.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "224/solution_224.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "12602/solution_12602.kt", "deepseek-coder-6.7b-base": "fun calculateTotalIncome(a: Int, b: Int): Int {\n    val c = a + b\n    return c\n}"}
{"kt_path": "2061/solution_2061.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "1884/solution_1884.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "5140/solution_5140.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "1945/solution_1945.kt", "deepseek-coder-6.7b-base": "fun subtractTaxidermyAnimals(a: Int, b: Int): Int {\n    val c = a - b\n    return c\n}"}
{"kt_path": "2025/solution_2025.kt", "deepseek-coder-6.7b-base": "fun calculateAnimalPopulation(a: Int, b: Int): Int {\n    return a - b\n}"}
{"kt_path": "14511/solution_14511.kt", "deepseek-coder-6.7b-base": "fun calculateNumberOfLights(cars: Int, lights: Int): Int {\n    return cars / lights\n}"}
{"kt_path": "13493/solution_13493.kt", "deepseek-coder-6.7b-base": "fun calculateDistance(x: Float, y: Float): Float {\n    return x * y\n}"}
{"kt_path": "4381/solution_4381.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "9587/solution_9587.kt", "deepseek-coder-6.7b-base": "fun bAnd(a: Boolean, b: Boolean): Boolean = if (a) b else false"}
{"kt_path": "6576/solution_6576.kt", "deepseek-coder-6.7b-base": "fun calculateDividendRatio(dividend: Float, divisor: Float): Float {\n    return dividend / divisor\n}"}
{"kt_path": "11550/solution_11550.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "7386/solution_7386.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "12691/solution_12691.kt", "deepseek-coder-6.7b-base": "fun calculateRemainingBudget(budget: Float, expenses: Float): Float {\n    return budget - expenses\n}"}
{"kt_path": "8209/solution_8209.kt", "deepseek-coder-6.7b-base": "fun calculateRequiredMaterials(a: Float, b: Float): Float {\n    val c = a / b\n    return c\n}"}
{"kt_path": "2049/solution_2049.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "586/solution_586.kt", "deepseek-coder-6.7b-base": "fun calculateArea(a: Double, b: Double): Double {\n    return a * b\n}"}
{"kt_path": "5139/solution_5139.kt", "deepseek-coder-6.7b-base": "fun calculateTax(income: Double, taxRate: Double): Double {\n    return income * taxRate\n}"}
{"kt_path": "7904/solution_7904.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "9335/solution_9335.kt", "deepseek-coder-6.7b-base": "fun calculateTax(income: Double, taxRate: Double): Double {\n    return income * taxRate\n}"}
{"kt_path": "2329/solution_2329.kt", "deepseek-coder-6.7b-base": "fun calculateTotalCost(quantity: Int, price: Float): Float {\n    val totalCost = quantity.toFloat() * price\n    return totalCost\n}"}
{"kt_path": "6572/solution_6572.kt", "deepseek-coder-6.7b-base": "fun calculateTotalPrice(quantity: Int, price: Float): Float {\n    val totalPrice = quantity.toFloat() * price\n    return totalPrice\n}"}
{"kt_path": "8071/solution_8071.kt", "deepseek-coder-6.7b-base": "fun calculateArea(a: Double, b: Double): Double {\n    return a * b\n}"}
{"kt_path": "11310/solution_11310.kt", "deepseek-coder-6.7b-base": "fun calculateExpenses(quantity: Int, price: Float): Float {\n    return quantity * price\n}"}
{"kt_path": "10435/solution_10435.kt", "deepseek-coder-6.7b-base": "fun calculateWeight(weight: Double, height: Int): Double {\n    return weight + height.toDouble()\n}"}
{"kt_path": "5594/solution_5594.kt", "deepseek-coder-6.7b-base": "fun checkRealPart(a: Int, b: Int): Boolean = a == b"}
{"kt_path": "1356/solution_1356.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "8902/solution_8902.kt", "deepseek-coder-6.7b-base": ""}
{"kt_path": "6573/solution_6573.kt", "deepseek-coder-6.7b-base": "fun calculateAveragePrice(price: Float, quantity: Int): Float {\n    val averagePrice = price / quantity.toFloat()\n    return averagePrice\n}"}
