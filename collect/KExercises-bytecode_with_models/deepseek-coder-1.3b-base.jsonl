{"kt_path": "7434/solution_7434.kt", "deepseek-coder-1.3b-base": "fun test() {}"}
{"kt_path": "7824/solution_7824.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(\"Hello, world\")\n}"}
{"kt_path": "2614/solution_2614.kt", "deepseek-coder-1.3b-base": "public final class Solution_2614Kt {\n  public fun investigateSituation() {\n  }\n}"}
{"kt_path": "4477/solution_4477.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(Solution_4477Kt.getLeadII())\n}"}
{"kt_path": "4476/solution_4476.kt", "deepseek-coder-1.3b-base": "fun getHeartRate() = 0"}
{"kt_path": "8909/solution_8909.kt", "deepseek-coder-1.3b-base": "public final class Solution_8909Kt {\n  public fun parentFunction(i: Int): Int {\n    return i\n  }\n}"}
{"kt_path": "4699/solution_4699.kt", "deepseek-coder-1.3b-base": "public final class Solution_4699Kt {\n  public fun hasLicense(license: Boolean): Boolean {\n    return license\n  }\n}"}
{"kt_path": "6126/solution_6126.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(Solution_6126Kt.checkBoolean(true))\n}"}
{"kt_path": "5226/solution_5226.kt", "deepseek-coder-1.3b-base": "fun intersectPrecedenceTuple(): Boolean {\n    return false\n}"}
{"kt_path": "652/solution_652.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(checkFloatDivision(1.0f, 2.0f))\n}\n\nfun checkFloatDivision(a: Float, b: Float): Boolean {\n    return a / b == 1.0f\n}"}
{"kt_path": "558/solution_558.kt", "deepseek-coder-1.3b-base": "public final class Solution_558Kt {\n  public static final int function1(int a, int b) = a xor b\n}"}
{"kt_path": "13973/solution_13973.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(Solution_13973Kt.divide(10, 3))\n}"}
{"kt_path": "13972/solution_13972.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(Solution_13972Kt.multiply(2, 3))\n}"}
{"kt_path": "13970/solution_13970.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(Solution_13970Kt.increaseByOne(1))\n}\n\npublic final class Solution_13970Kt {\n    public static final int increaseByOne(int x) = x + 1\n}"}
{"kt_path": "1606/solution_1606.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(getRemainder(10, 3))\n}\n\nfun getRemainder(a: Int, b: Int): Int {\n    return a % b\n}"}
{"kt_path": "3900/solution_3900.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(Solution_3900Kt.multiplyNumbers(1, 2))\n}\n\npublic final class Solution_3900Kt {\n  public static final int multiplyNumbers(int a, int b) = a * b\n}"}
{"kt_path": "13864/solution_13864.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateScore(1, 2))\n}\n\nfun calculateScore(a: Int, b: Int): Int {\n    return a * b\n}"}
{"kt_path": "7751/solution_7751.kt", "deepseek-coder-1.3b-base": "fun getComplement(n: Int): Int {\n    return n.toByteArray().let {\n        it[0] = it[0].toByte() xor 0b11111111\n        it.toInt()\n    }\n}"}
{"kt_path": "9566/solution_9566.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateVelocity(100, 200))\n}\n\nfun calculateVelocity(x: Int, y: Int): Int {\n    return x / y\n}"}
{"kt_path": "4903/solution_4903.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(Solution_4903Kt.calculateDayPublished(10))\n}"}
{"kt_path": "11380/solution_11380.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(determineWallArea(1, 2))\n}\n\nfun determineWallArea(a: Int, b: Int): Int {\n    return a * b\n}"}
{"kt_path": "1194/solution_1194.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(whileSubtraction(10, 5))\n}\n\nfun whileSubtraction(a: Int, b: Int): Int {\n    var c = a\n    while (c > b) {\n        c -= b\n    }\n    return c\n}"}
{"kt_path": "7844/solution_7844.kt", "deepseek-coder-1.3b-base": "fun divideNumbers(a: Double, b: Double): Double = a / b"}
{"kt_path": "599/solution_599.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateRoomArea(10.0, 10.0))\n}\n\nfun calculateRoomArea(width: Double, height: Double): Double {\n    return width * height\n}"}
{"kt_path": "8402/solution_8402.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateNetIncome}
{"kt_path": "11629/solution_11629.kt", "deepseek-coder-1.3b-base": "fun main() {\n    val slope = calculateSlope(1.0, 2.0)\n    println(slope)\n}\n\nfun calculateSlope(x: Double, y: Double): Double {\n    return x / y\n}"}
{"kt_path": "2587/solution_2587.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateRoomArea(2.0, 3.0))\n}\n\nfun calculateRoomArea(length: Double, width: Double): Double {\n    return length * width\n}"}
{"kt_path": "5733/solution_5733.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateBuildingArea(10.0f, 20.0f))\n}\n\nfun calculateBuildingArea(width: Float, height: Float): Float {\n    return width * height\n}"}
{"kt_path": "12144/solution_12144.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateProfits(100.0, 200.0))\n}\n\nfun calculateProfits(a: Double, b: Double): Double {\n    return a - b\n}"}
{"kt_path": "9763/solution_9763.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateFinalPrice(100.0, 10.0))\n}\n\nfun calculateFinalPrice(basePrice: Double, discount: Double): Double {\n    return basePrice * (1 - discount)\n}"}
{"kt_path": "11762/solution_11762.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateRoomArea(10.0, 10.0))\n}\n\nfun calculateRoomArea(width: Double, height: Double): Double {\n    return width * height\n}"}
{"kt_path": "9178/solution_9178.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateGravityForce(10.0, 20.0))\n}\n\nfun calculateGravityForce(m: Double, g: Double): Double {\n    return m * g\n}"}
{"kt_path": "8545/solution_8545.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateConversionRate(100, 100))\n}\n\nfun calculateConversionRate(from: Int, to: Int): Double {\n    return from.toDouble() / to.toDouble()\n}"}
{"kt_path": "13968/solution_13968.kt", "deepseek-coder-1.3b-base": "fun athletePerformanceDistance(distance: Double, time: Double): Double {\n    return distance / time\n}"}
{"kt_path": "7841/solution_7841.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(Solution_7841Kt.assignXor(1, 2))\n}"}
{"kt_path": "2909/solution_2909.kt", "deepseek-coder-1.3b-base": "public final class Solution_2909Kt {\n    public fun addNumbers(a: Int, b: Int): Int {\n        return a + b\n    }\n}"}
{"kt_path": "302/solution_302.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateXor(1, 2))\n}\n\nfun calculateXor(a: Int, b: Int): Int {\n    return a xor b\n}"}
{"kt_path": "12753/solution_12753.kt", "deepseek-coder-1.3b-base": "fun trimLumber(lumber: Int, wood: Int): Int {\n    return lumber - wood\n}"}
{"kt_path": "5694/solution_5694.kt", "deepseek-coder-1.3b-base": "public final class Solution_5694Kt {\n  public fun calculateAge(age: Int, year: Int): Int {\n    return age - year\n  }\n}"}
{"kt_path": "7772/solution_7772.kt", "deepseek-coder-1.3b-base": "public final class Solution_7772Kt {\n  public fun increaseSpeed(a: Int, b: Int): Int {\n    return a + b\n  }\n}"}
{"kt_path": "13321/solution_13321.kt", "deepseek-coder-1.3b-base": "fun xorOperation(n: Int, start: Int): Int {\n    var result = start\n    for (i in 1..n) {\n        result = result xor i\n    }\n    return result\n}"}
{"kt_path": "3882/solution_3882.kt", "deepseek-coder-1.3b-base": "fun calcTotalHours(hours: Int, minutes: Int): Int {\n    return (hours * 60 + minutes) / 60\n}"}
{"kt_path": "7919/solution_7919.kt", "deepseek-coder-1.3b-base": "fun main() {\n    val result = Solution_7919Kt.addOrOperation(1, 2)\n    println(result)\n}"}
{"kt_path": "640/solution_640.kt", "deepseek-coder-1.3b-base": "fun main() {\n    val a = 10\n    val b = 20\n    val c = a.multiplyAndAssign(b)\n    println(c)\n}\n\nfun Int.multiplyAndAssign(b: Int) = this * b"}
{"kt_path": "797/solution_797.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateTax(100000.0f, 0.0f))\n}\n\nfun calculateTax(income: Float, taxRate: Float): Float {\n    return income * taxRate\n}"}
{"kt_path": "3049/solution_3049.kt", "deepseek-coder-1.3b-base": "fun calculateVolume(x: Int, y: Int, z: Int) = x * y * z"}
{"kt_path": "6128/solution_6128.kt", "deepseek-coder-1.3b-base": "public final class Solution_6128Kt {\n  public static final int absoluteValue(int: int) {\n    return Math.abs(int)\n  }\n}"}
{"kt_path": "5969/solution_5969.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(Solution_5969Kt.getNegativeIndex(1, 2))\n}"}
{"kt_path": "1224/solution_1224.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(Solution_1224Kt.subtractIntegers(1, 2))\n}\n\npublic final class Solution_1224Kt {\n    public static final int subtractIntegers(int a, int b) {\n        return a - b\n    }\n}"}
{"kt_path": "1810/solution_1810.kt", "deepseek-coder-1.3b-base": "fun calculateLandArea(width: Int, height: Int): Int {\n    return width * height\n}"}
{"kt_path": "1562/solution_1562.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateTax(10000.0f, 0.05f))\n}\n\nfun calculateTax(income: Float, taxRate: Float): Float {\n    return income * taxRate\n}"}
{"kt_path": "2870/solution_2870.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateFine(10, 20))\n}\n\nfun calculateFine(actual: Int, expected: Int): Int {\n    return if (actual > expected) {\n        (actual - expected) * 500\n    } else {\n        0\n    }\n}"}
{"kt_path": "6759/solution_6759.kt", "deepseek-coder-1.3b-base": "fun averageSpeed(a: Float, b: Float): Float {\n    return a / b\n}"}
{"kt_path": "2736/solution_2736.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculatePatientAge(10, 20))\n}\n\nfun calculatePatientAge(age: Int, yearOfBirth: Int): Int {\n    return age - yearOfBirth\n}"}
{"kt_path": "4004/solution_4004.kt", "deepseek-coder-1.3b-base": "fun calculatePatientAge(age: Int, yearOfBirth: Int): Int {\n    return yearOfBirth - age\n}"}
{"kt_path": "12220/solution_12220.kt", "deepseek-coder-1.3b-base": "fun main() {\n    val a = 10\n    val b = 20\n    val c = a.and(b)\n    println(c)\n}"}
{"kt_path": "14509/solution_14509.kt", "deepseek-coder-1.3b-base": "fun calculateRoomArea(width: Int, height: Int): Int = width * height"}
{"kt_path": "13481/solution_13481.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateShutterSpeed(1.0, 1, 1.0))\n}\n\nfun calculateShutterSpeed(f: Double, i: Int, f2: Double): Double {\n    return f * i + f2\n}"}
{"kt_path": "10181/solution_10181.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateTax(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}
{"kt_path": "3783/solution_3783.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateVoltageDrop(10, 20))\n}\n\nfun calculateVoltageDrop(v1: Int, v2: Int): Int {\n    return v1 * v2\n}"}
{"kt_path": "7670/solution_7670.kt", "deepseek-coder-1.3b-base": "fun identityAssignment(): Boolean {\n    var a = 5\n    a = 1\n    return a == 1\n}"}
{"kt_path": "13453/solution_13453.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateTax(10000.0f, 0.05f))\n}\n\nfun calculateTax(income: Float, taxRate: Float): Float {\n    return income * taxRate\n}"}
{"kt_path": "6574/solution_6574.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(Solution_6574Kt.calculateProfit}
{"kt_path": "985/solution_985.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    var a = 1\n    var b = 2\n    var c = 3\n    var d = 4\n    var e = 5\n    var f = 6\n    var g = 7\n    var h = 8\n    var i = 9\n    var j = 10\n    var k = 11\n    var l = 12\n    var m = 13\n    var n = 14\n    var o = 15\n    var p = 16\n    var q = 17\n    var r = 18\n    var s = 19\n    var t = 20\n    var u = 21\n    var v = 22\n    var w = 23\n    var x = 24\n    var y = 25\n    var z = 26\n    var aa = 27\n    var bb = 28\n    var cc = 29\n    var dd = 30\n    var ee = 31\n    var ff = 32\n    var gg = 33\n    var hh = 34\n    var ii = 35\n    var jj = 36\n    var kk = 37\n    var ll = 38\n    var mm = 39\n    var nn = 40\n    var oo = 41\n    var pp = 42\n    var qq = 43\n    var rr = 44\n    var ss = 45\n    var tt = 46\n    var uu = 47\n    var vv = 48\n    var ww = 49\n    var xx = 50\n    var yy = 51\n    var zz = 52\n    var aaa = 53\n    var bbb = 54\n    var ccc = 55\n    var ddd = 56\n    var eee = 57\n    var fff = 58\n    var ggg = 59\n    var hhh = 60\n    var iii = 61\n    var jjj = 62\n    var kkk = 63\n    var lll = 64\n    var mmm = 65\n    var nnn = 66\n    var ooo = 67\n    var ppp = 68\n    var qqq = 69\n    var rrr = 70\n    var sss = 71\n    var ttt = 72\n    var uuu = 73\n    var vvv = 74\n    var www = 75\n    var xxx = 76\n    var yyy = 7"}
{"kt_path": "3069/solution_3069.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateStress(1.0f, 2.0f))\n}\n\nfun calculateStress(a: Float, b: Float): Float {\n    return a / b\n}"}
{"kt_path": "9567/solution_9567.kt", "deepseek-coder-1.3b-base": "public final class Solution_9567Kt {\n  public fun calculateAcceleration(x: Int, y: Int, z: Int): Int {\n    return (y - x) / z\n  }\n}"}
{"kt_path": "9762/solution_9762.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateDiscount(0.2))\n}\n\nfun calculateDiscount(discount: Double): Double {\n    return discount\n}"}
{"kt_path": "12787/solution_12787.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculatePower(2.0f, 3.0f))\n}\n\nfun calculatePower(x: Float, y: Float): Float {\n    return x.pow(y)\n}"}
{"kt_path": "14674/solution_14674.kt", "deepseek-coder-1.3b-base": "fun calculateTaxes(income: Float, taxRate: Float): Float {\n    return income * taxRate\n}"}
{"kt_path": "144/solution_144.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateNetIncome(10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}
{"kt_path": "224/solution_224.kt", "deepseek-coder-1.3b-base": "fun main() {\n    val salary = calculateSalary(1000.50)\n    println(salary)\n}\n\nfun calculateSalary(salary: Double): Long {\n    return Math.round(salary)\n}"}
{"kt_path": "12602/solution_12602.kt", "deepseek-coder-1.3b-base": "fun calculateTotalIncome(a: Int, b: Int): Int {\n    return a + b\n}"}
{"kt_path": "2061/solution_2061.kt", "deepseek-coder-1.3b-base": "fun calculateFurnitureArea(width: Int, height: Int): Int {\n    return width * height\n}"}
{"kt_path": "1884/solution_1884.kt", "deepseek-coder-1.3b-base": "fun calculateWallArea(a: Float, b: Float): Float {\n    return a * b\n}"}
{"kt_path": "5140/solution_5140.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateNetIncome}
{"kt_path": "1945/solution_1945.kt", "deepseek-coder-1.3b-base": "fun subtractTaxidermyAnimals(a: Int, b: Int): Int {\n    return a - b\n}"}
{"kt_path": "2025/solution_2025.kt", "deepseek-coder-1.3b-base": "fun calculateAnimalPopulation(a: Int, b: Int): Int {\n    return a - b\n}"}
{"kt_path": "14511/solution_14511.kt", "deepseek-coder-1.3b-base": "fun calculateNumberOfLights(n: Int, m: Int): Int {\n    return n / m\n}"}
{"kt_path": "13493/solution_13493.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateDistance(1.0f, 2.0f))\n}\n\nfun calculateDistance(x1: Float, x2: Float): Float {\n    return Math.sqrt(x1 * x1 + x2 * x2)\n}"}
{"kt_path": "4381/solution_4381.kt", "deepseek-coder-1.3b-base": "fun calculateAverageSpeed(a: Float, b: Float): Float {\n    return a / b\n}"}
{"kt_path": "9587/solution_9587.kt", "deepseek-coder-1.3b-base": "fun bAnd(a: Boolean, b: Boolean): Boolean {\n    return if (a) b else false\n}"}
{"kt_path": "6576/solution_6576.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateDividendRatio(100.0f, 1000.0f))\n}\n\nfun calculateDividendRatio(dividend: Float, divisor: Float): Float {\n    return dividend / divisor\n}"}
{"kt_path": "11550/solution_11550.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateAverageSpeed(100.0f, 200.0f))\n}\n\nfun calculateAverageSpeed(distance: Float, time: Float): Float {\n    return distance / time\n}"}
{"kt_path": "7386/solution_7386.kt", "deepseek-coder-1.3b-base": "fun main() {\n    val a = 1\n    val b = 2\n    val c = 3\n    val d = 4\n    val e = 5\n    val f = 6\n    val g = 7\n    val h = 8\n    val i = 9\n    val j = 10\n    val k = 11\n    val l = 12\n    val m = 13\n    val n = 14\n    val o = 15\n    val p = 16\n    val q = 17\n    val r = 18\n    val s = 19\n    val t = 20\n    val u = 21\n    val v = 22\n    val w = 23\n    val x = 24\n    val y = 25\n    val z = 26\n    val A = 27\n    val B = 28\n    val C = 29\n    val D = 30\n    val E = 31\n    val F = 32\n    val G = 33\n    val H = 34\n    val I = 35\n    val J = 36\n    val K = 37\n    val L = 38\n    val M = 39\n    val N = 40\n    val O = 41\n    val P = 42\n    val Q = 43\n    val R = 44\n    val S = 45\n    val T = 46\n    val U = 47\n    val V = 48\n    val W = 49\n    val X = 50\n    val Y = 51\n    val Z = 52\n    val a = 53\n    val b = 54\n    val c = 55\n    val d = 56\n    val e = 57\n    val f = 58\n    val g = 59\n    val h = 60\n    val i = 61\n    val j = 62\n    val k = 63\n    val l = 64\n    val m = 65\n    val n = 66\n    val o = 67\n    val p = 68\n    val q = 69\n    val r = 70\n    val s = 71\n    val t = 72\n    val u = 73\n    val v = 74\n    val w = 75\n    val x = 76\n    val y = 77\n    val z = 78\n    val A = 79\n    val B = 80\n    val C = 81\n    val D = 82\n    val E = 83\n    val"}
{"kt_path": "12691/solution_12691.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    val budget}
{"kt_path": "8209/solution_8209.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateRequiredMaterials(100f, 200f))\n}\n\nfun calculateRequiredMaterials(a: Float, b: Float): Float {\n    return a / b\n}"}
{"kt_path": "2049/solution_2049.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculatePrice(100.0, 200.0, 300.0))\n}\n\nfun calculatePrice(a: Double, b: Double, c: Double): Double {\n    return a * b * c\n}"}
{"kt_path": "586/solution_586.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateArea(1.0, 2.0))\n}\n\nfun calculateArea(a: Double, b: Double): Double {\n    return a * b\n}"}
{"kt_path": "5139/solution_5139.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateTax(10000.0, 0.0))\n}\n\nfun calculateTax(income: Double, taxRate: Double): Double {\n    return income * taxRate\n}"}
{"kt_path": "7904/solution_7904.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(checkCurrent(1.0, 2.0))\n}\n\nfun checkCurrent(a: Double, b: Double): Double {\n    return a / b\n}"}
{"kt_path": "9335/solution_9335.kt", "deepseek-coder-1.3b-base": "fun calculateTax(income: Double, taxRate: Double): Double {\n    return income * taxRate\n}"}
{"kt_path": "2329/solution_2329.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(Solution_2329Kt.calculateTotalCost(10, 10.0f))\n}\n\npublic final class Solution_2329Kt {\n    public static final float calculateTotalCost(int i, float f) {\n        return i.toFloat() * f\n    }\n}"}
{"kt_path": "6572/solution_6572.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    val totalPrice = calculateTotalPrice(10, 10.0f)\n    println(totalPrice)\n}\n\nfun calculateTotalPrice(quantity: Int, price: Float): Float {\n    return quantity * price\n}"}
{"kt_path": "8071/solution_8071.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateArea(10.0, 20.0))\n}\n\nfun calculateArea(a: Double, b: Double): Double {\n    return a * b\n}"}
{"kt_path": "11310/solution_11310.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    println(calculateExpenses(100, 100.0f))\n}\n\nfun calculateExpenses(days: Int, amount: Float): Float {\n    return amount * days\n}"}
{"kt_path": "10435/solution_10435.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(calculateWeight(1.0, 2))\n}\n\nfun calculateWeight(weight: Double, height: Int): Double {\n    return weight / height.toDouble()\n}"}
{"kt_path": "5594/solution_5594.kt", "deepseek-coder-1.3b-base": "fun main() {\n    println(checkRealPart(1, 2))\n}\n\nfun checkRealPart(a: Int, b: Int): Boolean {\n    return a == b\n}"}
{"kt_path": "1356/solution_1356.kt", "deepseek-coder-1.3b-base": "public fun isNone(obj: Any?): Boolean {\n    return obj == null\n}"}
{"kt_path": "8902/solution_8902.kt", "deepseek-coder-1.3b-base": "fun calculatePower(a: Double, b: Double): Double {\n    return a * b\n}"}
{"kt_path": "6573/solution_6573.kt", "deepseek-coder-1.3b-base": "fun main(args: Array<String>) {\n    val averagePrice = calculateAveragePrice(100f, 10)\n    println(\"Average price: $averagePrice\")\n}\n\nfun calculateAveragePrice(price: Float, count: Int): Float {\n    return price / count\n}"}
